name: MicroShed CI

on:
  push:
  pull_request:
    branches: 
    - main
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - '.gitignore'
      - '.dockerignore'
      - '*.md'
      - '*.adoc'
      - '*.txt'
      - '.github/ISSUE_TEMPLATE/**'

env:
  LANG: en_US.UTF-8
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        java: [ 11 ]
      fail-fast: false
      max-parallel: 4
    name: Build ${{ matrix.java }}, ${{ matrix.os }}

    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
    - name: Set up Java
      uses: actions/setup-java@0ab4596768b603586c0de567f2430c30f5b0d2b0 # v3.13.0
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'
        cache: gradle
    - name: Build with Gradle
      run: |
        chmod +x gradlew
        ./gradlew assemble testClasses
  integration_tests:
    name: Tests - ${{matrix.category}}
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 20
    strategy:
      fail-fast: false
      max-parallel: 18
      matrix:
        include:
          - category: JAXRS
            projects: >
              jaxrs-json
              jaxrs-basicauth
              jaxrs-mpjwt
              everything-app
          - category: GENERAL
            projects: >
              maven-app
              everything-app
              jdbc-app
              kafka-app
          - category: LIBERTY/PAYARA
            projects: >
              liberty-app
              payara-app
          - category: QUARKUS/WILDFLY
            projects: >
              quarkus-app
              wildfly-app
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Set up Java
        uses: actions/setup-java@0ab4596768b603586c0de567f2430c30f5b0d2b0 # v3.13.0
        with:
          java-version: 11
          distribution: 'temurin'
          cache: gradle
      - name: Run integration tests
        shell: bash
        env:
          TEST_PROJECTS: ${{matrix.projects}}
          CATEGORY: ${{matrix.category}}
        run: |
          chmod +x gradlew
          echo "org.gradle.daemon=false" >> gradle.properties
  
          echo "Will be running projects $TEST_PROJECTS"
          for TEST_PROJECT in $TEST_PROJECTS
          do
            if [[ ! -d "sample-apps/$TEST_PROJECT" ]]; then
              echo "::error::Test project $TEST_PROJECT does not exist.";
              exit 1;
            fi
            echo "### BEGIN running test project $TEST_PROJECT"
              ./gradlew :microshed-testing-$TEST_PROJECT:test
              echo "### END running test project $TEST_PROJECT";
          done
  
          echo "Done running all tests."
